#name: Orquestar Despliegue
#on:
#  push:
#    branches: [main]
#  workflow_dispatch:
#jobs:
#  deploy:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: hashicorp/setup-terraform@v2
#      - run: terraform init
#        env:
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          TOKEN_GITHUB: ${{ secrets.TOKEN_GITHUB }}
#      - run: terraform apply -auto-approve
#        env:
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#      - uses: actions/github-script@v6
#        with:
#          script: |
#            await github.rest.actions.createWorkflowDispatch({
#              owner: 'Chany1906',
#              repo: 'aws_s3',
#              workflow_id: 'deploy.yml',
#              ref: 'main'
#            });
#            await github.rest.actions.createWorkflowDispatch({
#              owner: 'Chany1906',
#              repo: 'aws-lambda',
#              workflow_id: 'deploy.yml',
#              ref: 'main'
#            });
#            await github.rest.actions.createWorkflowDispatch({
#              owner: 'Chany1906',
#             repo: 'aws_ec2',
#              workflow_id: 'deploy.yml',
#              ref: 'main'
#            });
#            

name: Orquestar Despliegue

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: hashicorp/setup-terraform@v2

      - run: terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - run: terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Disparar despliegue en subrepos
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.MY_PAT_TOKEN }}
          script: |
            const repos = ['aws_s3', 'aws-lambda', 'aws_ec2'];
            for (const repo of repos) {
              await github.rest.actions.createWorkflowDispatch({
                owner: 'Chany1906',
                repo,
                workflow_id: 'deploy.yml',
                ref: 'main'
              });
            }
